<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">

<properties>

<!-- ================= select 구간 ======================== -->

	<!--[han]-->
	<entry key="memberCount">
		SELECT COUNT(*) AS COUNT
		FROM MEMBER
		JOIN LOGIN_API USING(USER_ID)
		WHERE STATUS
	</entry>
	
	<!--[han]-->
	<entry key="userCountFilter">
		SELECT COUNT(*) AS COUNT
		FROM MEMBER
		WHERE STATUS
	</entry>
	
	
	<!--[han]  어드민 페이지용 멤버 조회 -->
	<entry key="selectMemberList">
		SELECT USER_ID, NICKNAME, STATUS , COIN, ENROLL_DATE, API_KIND
		FROM (
		  SELECT USER_ID, NICKNAME, STATUS , COIN, ENROLL_DATE, API_KIND, ROWNUM AS RN
		  FROM (
		    SELECT USER_ID, NICKNAME, STATUS , COIN, ENROLL_DATE, API_KIND
		    FROM MEMBER
            JOIN LOGIN_API USING(USER_ID)
		    WHERE STATUS IN AND API_KIND IN
		    ORDER BY ## DESC
		  )
		)
		WHERE RN BETWEEN ? AND ?
	</entry>
	
	<!--[han] 어드민 페이지용 멤버 조회 -->
	<entry key="searchMembers">
		SELECT USER_ID, 
				NICKNAME, 
				STATUS
		FROM (
		  SELECT USER_ID, 
				NICKNAME, 
				STATUS,
		        UTL_MATCH.EDIT_DISTANCE( ? , ## ) AS DISTANCE
		  FROM MEMBER
		  WHERE ## LIKE ? escape '\'
		)
		ORDER BY DISTANCE , ## 
	</entry>
	
	<!--[han] 어드민 페이지용 멤버 조회 -->
	<entry key="selectMemberAllInfo">
		SELECT USER_ID,
			   NICKNAME,
               M.STATUS,
			   SKIN_ID,
               COIN,
			   SELF_INFO,
			   GENDER,
               ENROLL_DATE,
               API_KIND,
               CANCELLATION_DATE
		FROM MEMBER M
		LEFT JOIN LOGIN_API USING(USER_ID)
        LEFT JOIN DISABLED_MEMBER USING(USER_ID)
		WHERE USER_ID = ?
	</entry>
	

	<!-- [혜린] -->
	<entry key="loginMember">
		SELECT * 
		FROM MEMBER
		WHERE USER_ID = ?
		  AND USER_PWD = ?
	</entry>

	<!-- [혜린] -->
	<entry key="checkKey">
		SELECT M.USER_ID,USER_PWD,NICKNAME,STATUS,SKIN_ID,COIN,SELF_INFO,GENDER,ENROLL_DATE
		FROM MEMBER M, LOGIN_API A
		WHERE M.USER_ID = A.USER_ID 
		AND API_KIND = ?
		AND API_KEY = ?
	</entry>

	<!-- [혜린] -->
	<entry key = "loginApi">
		SELECT *
		FORM LOGIN_API
		WHERE API_KEY = ?
	</entry>
	
	<!-- [혜린] -->
	<entry key="checkId">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE USER_ID = ?
	</entry>
	
	<!-- [혜린] -->
	<entry key="checkNick">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE NICKNAME = ?
	</entry>
	
	<!-- [가영] 유저 정보 불러오기 -->
	<entry key="selectMember">
		SELECT USER_ID,
			   NICKNAME,
			   SKIN_ID,
			   SELF_INFO,
			   GENDER
		FROM MEMBER
		JOIN CHARACTER_SKIN USING(SKIN_ID)
		WHERE USER_ID = ?
	</entry>
	
	<!-- [가영] 신고 정보 db 저장 -->
	<entry key="insertReport">
		INSERT INTO REPORT (REPORT_NO,
							USER_ID,
							RECEIVE_ID,
							REPORT_TITLE,
							REPORT_CONTENT)
		VALUES (SEQ_REPORT.NEXTVAL,
				?,
				?,
				?,
				?)
	</entry>
	
	<!-- [가영] 호감도 추가, 삭제, 조회 -->
	<entry key="insertHeart">
		INSERT INTO HEART(USER_ID, RECEIVE_ID)
		VALUES (?, ?)
	</entry>
	
	<entry key="deleteHeart">
		DELETE FROM HEART
		WHERE USER_ID = ?
		  AND RECEIVE_ID =?
	</entry>
	
	<entry key="selectHeart">
		SELECT COUNT(*) 
		FROM HEART
		WHERE USER_ID = ?
		  AND RECEIVE_ID =?
	</entry>
	
	<!-- [가영] 친구 추가, 삭제, 조회 -->
	<entry key="insertFriend">
		INSERT INTO FRIEND(USER_ID, FRIEND_ID)
		VALUES (?, ?)
	</entry>
	
	<entry key="deleteFriend">
		DELETE FROM FRIEND
		WHERE USER_ID = ?
		  AND FRIEND_ID =?
	</entry>
	
	<entry key="selectFriend">
		SELECT COUNT(*) 
		FROM FRIEND
		WHERE USER_ID = ?
		  AND FRIEND_ID =?
	</entry>


	
	
	
<!-- ================= insert 구간 ======================== -->
	<!-- [혜린] -->
	<entry key="insertMember">
		INSERT INTO MEMBER( USER_ID,
							USER_PWD,
							NICKNAME)
					VALUES (?,
							?,
							?)
	</entry>

	<!-- [혜린] -->
	<entry key = "insertKey">
		INSERT INTO LOGIN_API(USER_ID,
							  API_KIND,
							  API_KEY)
					   VALUES(?,
					   		  ?,
					   		  ?)
	</entry>
	
	<!-- [혜린] -->
	<entry key="insertDltMember">
		INSERT INTO DISABLED_MEMBER
					(USER_ID,
					 STATUS)
			 VALUES(?,
			 		'N')
	</entry>
	
	<!-- [혜린] -->
	<entry key="insertCharacter">
	INSERT INTO CHARACTER
					(USER_ID,
					SKIN_ID)
			 VALUES(?,
			 		'0')
	</entry>
	
<!-- ================= update 구간 ======================== -->
<!-- [혜린] -->
	<entry key = "updatePwd">
		UPDATE MEMBER
		   SET USER_PWD = ?
		 WHERE USER_ID = ?
	</entry>
	
<!-- [혜린] -->
	<entry key = "updateStatus">
		UPDATE MEMBER
		   SET STATUS = 'N'
		 WHERE USER_ID = ?
	</entry>


<!-- ================= delete 구간 ======================== -->
<!-- [혜린] -->
	<entry key = "dltMemBoard">
		DELETE FROM BOARD
		 WHERE USER_ID = ?
		    OR RECEIVE_ID = ?
	</entry>
	<entry key = "dltMemChatting">
		DELETE FROM CHATTING
		 WHERE USER_ID = ?
		    OR RECEIVE_ID = ?
	</entry>
	<entry key = "dltMemHeart">
		DELETE FROM HEART
		 WHERE USER_ID = ?
		    OR RECEIVE_ID = ?
	</entry>
<!-- [혜린] -->
	<entry key = "dltMemCharacter">
		DELETE FROM CHARACTER
		 WHERE USER_ID = ?
	</entry>
	<entry key = "dltMemFriend">
		DELETE FROM FRIEND
		 WHERE USER_ID = ?
	</entry>
	<entry key = "dltMemApi">
		DELETE FROM LOGIN_API
		 WHERE USER_ID = ?
	</entry>
	








	
<!-- [han] -->
	<entry key="blockMember">
		UPDATE MEMBER
		SET STATUS = 'X'
		WHERE USER_ID = ?
	</entry>

	

<!-- [han] -->
	<entry key="deleteMember">
		DELETE FROM MEMBER WHERE USER_ID =  ?
	</entry>


</properties>